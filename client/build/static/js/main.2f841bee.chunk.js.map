{"version":3,"sources":["Helpers/history.js","Actions/types.js","Reducers/init.js","Reducers/alert.js","Reducers/index.js","Helpers/store.js","Components/Alert.js","Routing/DefaultLayout.js","Components/NotFound.js","Actions/alertActions.js","Components/CreateApp.js","Routing/Routes.js","App.js","index.js"],"names":["history","createBrowserHistory","HELLO_MESSAGE_SUCCESS","HELLO_MESSAGE_FAIL","SET_ALERT","REMOVE_ALERT","initialState","message","errors","rootReducer","combineReducers","init","state","action","type","payload","alert","filter","id","middleware","thunk","store","createStore","compose","applyMiddleware","connect","alerts","length","map","UncontrolledAlert","style","position","left","top","width","color","alertType","msg","uuid","DefaultLayout","children","className","overflowX","backgroundColor","DefaultLayoutRoute","Component","component","rest","render","matchProps","NotFound","minHeight","display","justifyContent","alignItems","flexDirection","aria-hidden","to","setAlert","timeout","dispatch","uuidv4","setTimeout","CreateApp","props","useState","name","slug","email","password","schema","signUpForm","setSignUpForm","showDownloadLink","setShowDownloadLink","loading","setLoading","appCreated","setAppCreated","saveForm","a","form","model","isAuth","attributes","attribute","ref","required","console","log","axios","post","data","window","scrollTo","response","status","updateModel","e","index","preventDefault","tempSchema","target","value","updateAttribute","modelIndex","attributeIndex","padding","Button","fontSize","textDecoration","download","overflowY","borderTopLeftRadius","borderBottomLeftRadius","Form","Row","Col","FormGroup","Label","for","Input","onChange","marginBottom","onClick","borderRadius","md","splice","deleteModel","placeholder","push","scroll","addAttribute","marginTop","mod","ind","deleteAttribute","ariaLabel","minWidth","borderTopRightRadius","borderBottomRightRadius","disabled","Routes","exact","path","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f841bee.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const HELLO_MESSAGE_SUCCESS = 'HELLO_MESSAGE_SUCCESS';\r\nexport const HELLO_MESSAGE_FAIL = 'HELLO_MESSAGE_FAIL';\r\n\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","  \r\nimport {\r\n    HELLO_MESSAGE_SUCCESS,\r\n    HELLO_MESSAGE_FAIL \r\n} from '../Actions/types';\r\n\r\nconst initialState = {\r\n    message:'',\r\n    errors: null\r\n};\r\n\r\nexport default function reducerFunction(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HELLO_MESSAGE_SUCCESS:\r\n      return {\r\n          ...state,\r\n          message: payload\r\n      };\r\n    case HELLO_MESSAGE_FAIL:\r\n      return {\r\n          ...state,\r\n          errors: payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","  \r\nimport { SET_ALERT, REMOVE_ALERT } from '../Actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function reducerFunction (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers} from 'redux';\r\n\r\n// Import all the reducers here\r\nimport init from './init';\r\nimport alert from './alert';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    init,\r\n    alert,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../Reducers';\r\n\r\nconst initalState = {};\r\n\r\nconst middleware =[thunk];\r\n\r\nconst store = createStore(rootReducer, initalState, compose(\r\n    applyMiddleware(...middleware)\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({trace: true})\r\n));\r\n\r\nexport default store;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { UncontrolledAlert } from 'reactstrap';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map(alert => (\r\n    <UncontrolledAlert key={uuid()} style={{position:\"absolute\",left:0,top:0,width:\"100%\"}} color={alert.alertType}>\r\n        {alert.msg}\r\n    </UncontrolledAlert>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);","import React from 'react'\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Alert from '../Components/Alert';\r\n\r\n\r\nconst DefaultLayout = ({children}) => {\r\n    return (\r\n        <div id=\"wrapper\">\r\n            <div className=\"container-fluid p-0 min-vh-100\" style={{overflowX:'hidden'}}>\r\n                <div style={{backgroundColor: \"#B23CFD\"}} id=\"page-wrapper\">\r\n                    <Alert />\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst DefaultLayoutRoute = ({component: Component, ...rest}) => ( \r\n\r\n      <Route {...rest} render={matchProps => (  \r\n        <DefaultLayout>\r\n            <Component {...matchProps} />  \r\n        </DefaultLayout>\r\n      )} />  \r\n\r\n)\r\n\r\nDefaultLayout.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default DefaultLayoutRoute;\r\n\r\n","  \r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst NotFound = () => {\r\n  return (\r\n    <div style={{minHeight:\"100vh\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",flexDirection:\"column\"}}>\r\n      <h1 className='x-large text-primary display-2'>\r\n        <i className=\"fa fa-exclamation-triangle\" style={{color:\"black\"}} aria-hidden=\"true\"></i>{' '} \r\n        <span  style={{color:\"black\"}}>\r\n        Page Not Found\r\n\r\n        </span>\r\n      </h1>\r\n      <Link to=\"/\" className='display-4' style={{color:\"white\"}} >Go Home</Link>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};","import React, {  useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { setAlert } from \"../Actions/alertActions\";\r\nimport store from \"../Helpers/store\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {MutatingDots} from \"react-loader-spinner\"\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst CreateApp = (props) => {\r\n  const [signUpForm, setSignUpForm] = useState({\r\n    name: \"\",\r\n    slug: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    schema: [],\r\n  });\r\n  const [showDownloadLink, setShowDownloadLink] = useState(false);\r\n\r\n  const [loading,setLoading] = useState(false)\r\n  const [appCreated,setAppCreated] = useState(false)\r\n  const checkBasicsFilled = () => {\r\n    console.log(signUpForm);\r\n    console.log(!signUpForm.password);\r\n    if (\r\n      signUpForm.name &&\r\n      signUpForm.slug &&\r\n      signUpForm.email &&\r\n      signUpForm.password\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const saveForm = async () => {\r\n    let form = signUpForm;\r\n    setLoading(true)\r\n    form.schema.map((model) => {\r\n      if (model.name) {\r\n        if (!model.isAuth || model.isAuth === \"isAuth\") {\r\n          model.isAuth = false;\r\n        }\r\n        model.attributes.map((attribute) => {\r\n          if (attribute.name) {\r\n            if (!attribute.type || attribute.type === \"0\") {\r\n              attribute.type = \"String\";\r\n            }\r\n            if (!attribute.ref || attribute.ref === \"0\") {\r\n              attribute.ref = null;\r\n            }\r\n            if (!attribute.required || attribute.required === \"0\") {\r\n              attribute.required = false;\r\n            }\r\n            return attribute;\r\n          }\r\n          return null;\r\n        });\r\n        return model;\r\n      }\r\n\r\n      return null;\r\n    });\r\n    console.log(form);\r\n    setSignUpForm(form);\r\n    try {\r\n      const data = await axios.post(\"/app\", form);\r\n\r\n      if (data.data) {\r\n        setLoading(false)\r\n        setShowDownloadLink(true);\r\n        window.scrollTo(0, 0);\r\n        setAppCreated(true)\r\n        store.dispatch(\r\n          setAlert(\r\n            \"Your backend app has been created successfully. Click on the download button to get it now.\",\r\n            \"success\"\r\n          )\r\n        );\r\n      }\r\n    } catch (err) {\r\n      setLoading(false)\r\n      window.scrollTo(0,0)\r\n      if(err.response.status===409){\r\n        store.dispatch(setAlert(err.response.data.slug,\"danger\",4000))\r\n      }else{\r\n        store.dispatch(setAlert(\"An error occurred. Please try again.\",\"danger\",4000))\r\n      }\r\n    }\r\n  };\r\n\r\n  const addModel = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (checkBasicsFilled()) {\r\n      setSignUpForm({\r\n        ...signUpForm,\r\n        schema: [\r\n          ...signUpForm.schema,\r\n          {\r\n            isAuth: false,\r\n            name: \"\",\r\n            attributes: [],\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      store.dispatch(\r\n        setAlert(\"Please enter basic app credentials first\", \"danger\", 3000)\r\n      );\r\n    }\r\n  };\r\n\r\n  const updateModel = (e, index) => {\r\n    e.preventDefault();\r\n    const tempSchema = signUpForm.schema;\r\n    tempSchema[index][e.target.name] = e.target.value;\r\n    setSignUpForm({ ...signUpForm, schema: tempSchema });\r\n  };\r\n\r\n  const updateAttribute = (e, modelIndex, attributeIndex) => {\r\n    e.preventDefault();\r\n    const tempSchema = signUpForm.schema;\r\n    tempSchema[modelIndex].attributes[attributeIndex][e.target.name] =\r\n      e.target.value;\r\n    setSignUpForm({ ...signUpForm, schema: tempSchema });\r\n  };\r\n\r\n  const deleteModel = (modelIndex) => {\r\n    let tempSchema = signUpForm.schema;\r\n    tempSchema.splice(modelIndex, 1);\r\n    setSignUpForm({ ...signUpForm, schema: tempSchema });\r\n  };\r\n  const deleteAttribute = (modelIndex, attributeIndex) => {\r\n    let tempSchema = signUpForm.schema;\r\n    tempSchema[modelIndex].attributes.splice(attributeIndex, 1);\r\n    setSignUpForm({ ...signUpForm, schema: tempSchema });\r\n  };\r\n  const addAttribute = (e, modelIndex) => {\r\n    e.preventDefault();\r\n\r\n    const tempSchema = signUpForm.schema;\r\n    if (!tempSchema[modelIndex].name) {\r\n      window.scroll(0, 0);\r\n      store.dispatch(setAlert(\"Please enter model name first\", \"danger\", 3000));\r\n    } else {\r\n      if (!tempSchema[modelIndex].attributes) {\r\n        tempSchema[modelIndex].attributes = [];\r\n      }\r\n      tempSchema[modelIndex].attributes.push({\r\n        name: \"\",\r\n        type: \"\",\r\n        ref: \"\",\r\n        required: \"\",\r\n      });\r\n\r\n      setSignUpForm({ ...signUpForm, schema: tempSchema });\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#B23CFD\",\r\n        padding: \"20px\",\r\n        minHeight: \"100vh\",\r\n      }}\r\n    >\r\n      <div className=\"display-3\">\r\n        <center>\r\n          Create your application...\r\n          {showDownloadLink ? (\r\n            <Button\r\n              className=\"float float-right\"\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                fontSize: \"20px\",\r\n              }}\r\n            >\r\n              <Link\r\n                to={`zips/${signUpForm.slug}.zip`}\r\n                target=\"_blank\"\r\n                style={{\r\n                  color: \"black\",\r\n                  textDecoration: \"none\",\r\n                  display: \"inline-block\",\r\n                }}\r\n                download\r\n              >\r\n                Download App\r\n              </Link>\r\n            </Button>\r\n          ) : null}\r\n        </center>\r\n      </div>\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-md-12\"\r\n            style={{\r\n              // backgroundColor: \"#00B74A\",\r\n              borderTopLeftRadius: \"20px\",\r\n              borderBottomLeftRadius: \"20px\",\r\n              padding: \"20px\",\r\n            }}\r\n          >\r\n            <div className=\"signup-form\">\r\n              <Form>\r\n                <Row form>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"name\" style={{ fontSize: \"20px\" }}>\r\n                        App Name\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={signUpForm.name}\r\n                        style={{\r\n                          fontSize: \"20px\",\r\n                        }}\r\n                        onChange={(e) =>\r\n                          setSignUpForm({\r\n                            ...signUpForm,\r\n                            [e.target.name]: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"slug\" style={{ fontSize: \"20px\" }}>\r\n                        App Slug\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"slug\"\r\n                        value={signUpForm.slug}\r\n                        style={{\r\n                          fontSize: \"20px\",\r\n                        }}\r\n                        onChange={(e) =>\r\n                          setSignUpForm({\r\n                            ...signUpForm,\r\n                            [e.target.name]: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"email\" style={{ fontSize: \"20px\" }}>\r\n                        Email\r\n                      </Label>\r\n                      <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={signUpForm.email}\r\n                        style={{\r\n                          fontSize: \"20px\",\r\n                        }}\r\n                        onChange={(e) =>\r\n                          setSignUpForm({\r\n                            ...signUpForm,\r\n                            [e.target.name]: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"password\" style={{ fontSize: \"20px\" }}>\r\n                        Password\r\n                      </Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={signUpForm.password}\r\n                        style={{\r\n                          fontSize: \"20px\",\r\n                        }}\r\n                        onChange={(e) =>\r\n                          setSignUpForm({\r\n                            ...signUpForm,\r\n                            [e.target.name]: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <center>\r\n                  <div style={{ marginBottom: \"20px\" }}>\r\n                    <Button\r\n                      color=\"info\"\r\n                      onClick={addModel}\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        width: \"50%\",\r\n                        borderRadius: \"20px\",\r\n                      }}\r\n                    >\r\n                      Add a new Model\r\n                    </Button>\r\n                  </div>\r\n                </center>\r\n                <div>\r\n                  {signUpForm.schema &&\r\n                    signUpForm.schema.map((model, modelIndex) => (\r\n                      <div\r\n                        key={modelIndex}\r\n                        style={{\r\n                          backgroundColor: \"#666699\",\r\n                          padding: \"10px\",\r\n                          marginBottom: \"10px\",\r\n                          borderRadius: \"10px\",\r\n                        }}\r\n                      >\r\n                        <Row form style={{marginBottom:\"10px\"}}>\r\n                        <Col md={3}>\r\n                            <div style={{fontSize:\"30px\",display:\"flex\",color:\"white\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n                              Model #{modelIndex+1}\r\n                            </div>\r\n                          </Col>\r\n                          <Col md={2}>\r\n                            <Button\r\n                              color=\"danger\"\r\n                              onClick={() => deleteModel(modelIndex)}\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                width: \"100%\",\r\n                              }}\r\n                            >\r\n                              Delete Model\r\n                            </Button>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"Model Name\"\r\n                                value={model.name}\r\n                                onChange={(e) => updateModel(e, modelIndex)}\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                }}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={2}>\r\n                            <FormGroup>\r\n                              <Input\r\n                                type=\"select\"\r\n                                name=\"isAuth\"\r\n                                id=\"isAuth\"\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                }}\r\n                                onChange={(e) => updateModel(e, modelIndex)}\r\n                              >\r\n                                <option value=\"isAuth\">Is Auth?</option>\r\n                                <option value={true}>True</option>\r\n                                <option value={false}>False</option>\r\n                              </Input>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={2}>\r\n                            <Button\r\n                              color=\"warning\"\r\n                              onClick={(e) => addAttribute(e, modelIndex)}\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                width: \"100%\",\r\n                              }}\r\n                            >\r\n                              Add Attribute\r\n                              {/* {model.attributes && model.attributes.length\r\n                                ? \"Add another attribute\"\r\n                                : \"Add an attribute\"} */}\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                        <div>\r\n                          {model.attributes &&\r\n                            model.attributes.map(\r\n                              (attribute, attributeIndex) => (\r\n                                <Row form key={attributeIndex}\r\n                                  style={{marginTop:\"20px\"}}\r\n                                >\r\n                                  <Col md={3}>\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      name=\"name\"\r\n                                      value={attribute.name}\r\n                                      onChange={(e) =>\r\n                                        updateAttribute(\r\n                                          e,\r\n                                          modelIndex,\r\n                                          attributeIndex\r\n                                        )\r\n                                      }\r\n                                      placeholder=\"Attribute Name\"\r\n                                      style={{\r\n                                        fontSize: \"20px\"\r\n                                      }}\r\n                                    />\r\n                                  </Col>\r\n                                  <Col md={3}>\r\n                                    <FormGroup>\r\n                                      <Input\r\n                                        type=\"select\"\r\n                                        name=\"type\"\r\n                                        style={{ fontSize: \"20px\" }}\r\n                                        onChange={(e) =>\r\n                                          updateAttribute(\r\n                                            e,\r\n                                            modelIndex,\r\n                                            attributeIndex\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <option value=\"0\">\r\n                                          Select Attribute Type\r\n                                        </option>\r\n                                        <option value=\"String\">String</option>\r\n                                        <option value=\"Number\">Number</option>\r\n                                        <option value=\"Date\">Date</option>\r\n                                        <option value=\"Buffer\">Buffer</option>\r\n                                        <option value=\"Boolean\">Boolean</option>\r\n                                        <option value=\"Mixed\">Mixed</option>\r\n                                        <option value=\"ObjectId\">\r\n                                          ObjectId\r\n                                        </option>\r\n                                        <option value=\"Array\">Array</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                  <Col md={3}>\r\n                                    <FormGroup>\r\n                                      <Input\r\n                                        type=\"select\"\r\n                                        name=\"ref\"\r\n                                        style={{ fontSize: \"20px\" }}\r\n                                        onChange={(e) =>\r\n                                          updateAttribute(\r\n                                            e,\r\n                                            modelIndex,\r\n                                            attributeIndex\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <option value=\"0\">\r\n                                          Select Attribute Ref (if exists)\r\n                                        </option>\r\n                                        {signUpForm.schema.map((mod, ind) => {\r\n                                          if (mod.name)\r\n                                            return (\r\n                                              <option\r\n                                                key={ind}\r\n                                                value={mod.name}\r\n                                              >\r\n                                                {mod.name}\r\n                                              </option>\r\n                                            );\r\n                                          else return null;\r\n                                        })}\r\n                                      </Input>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                  <Col md={2}>\r\n                                    <FormGroup>\r\n                                      <Input\r\n                                        type=\"select\"\r\n                                        name=\"required\"\r\n                                        style={{ fontSize: \"20px\" }}\r\n                                        onChange={(e) =>\r\n                                          updateAttribute(\r\n                                            e,\r\n                                            modelIndex,\r\n                                            attributeIndex\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <option value=\"0\">\r\n                                          Attribute Required\r\n                                        </option>\r\n                                        <option value={true}>True</option>\r\n                                        <option value={false}>False</option>\r\n                                      </Input>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                  <Col md={1}>\r\n                                    <Button\r\n                                      color=\"danger\"\r\n                                      onClick={() =>\r\n                                        deleteAttribute(\r\n                                          modelIndex,\r\n                                          attributeIndex\r\n                                        )\r\n                                      }\r\n                                      style={{\r\n                                        fontSize: \"20px\",\r\n                                        width:\"100%\"\r\n                                      }}\r\n                                    >\r\n                                      Remove\r\n                                    </Button>\r\n                                  </Col>\r\n                                </Row>\r\n                              )\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }} className=\"float float-right\">\r\n\r\n                  <span className=\"float float-right\">\r\n                  {\r\n                    loading ?\r\n                    <MutatingDots ariaLabel=\"loading-indicator\" color=\"yellow\"/>\r\n                    :\r\n                    <Button\r\n                    color=\"success\"\r\n                    onClick={saveForm}\r\n                    style={{\r\n                      fontSize: \"20px\",\r\n                      padding: \"10px\",\r\n                      minWidth: \"200px\",\r\n                      borderTopRightRadius: \"20px\",\r\n                      borderBottomRightRadius: \"20px\",\r\n                    }}\r\n                    disabled={appCreated}\r\n                  >\r\n                    {\r\n                      appCreated ? \"Saved\" : \"Save\"\r\n                    }\r\n                  </Button>\r\n                  }\r\n\r\n                  </span>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateApp;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport DefaultLayoutRoute from './DefaultLayout';\r\nimport NotFound from '../Components/NotFound';\r\nimport CreateApp from '../Components/CreateApp';\r\n\r\n\r\nconst Routes =  ()  => {\r\n  return (\r\n      <Switch>\r\n        {/* <DefaultLayoutRoute exact path=\"/hello\" component={MessagePage} /> */}\r\n        <DefaultLayoutRoute exact path=\"/\" component={CreateApp} />\r\n        <DefaultLayoutRoute component={NotFound} />\r\n      </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n// const mapStateToProps = (state) => ({\r\n//   auth: state.auth,\r\n//   // isAuthenticated: state.auth.isAuthenticated,\r\n// });\r\n\r\n// export default connect(mapStateToProps)(Routes);\r\n","import React from 'react';\nimport { Router,Route, Switch } from 'react-router-dom';\nimport { history } from './Helpers';\n\nimport './App.css';\n\nimport { Provider } from 'react-redux';\nimport store from './Helpers/store';\nimport Routes from './Routing/Routes';\n\n\nconst App = () => {\n  \n\n  return (\n    <Provider store={store}>\n        <Router history={history}>\n            <Switch>\n              <Route component = {Routes} />\n            </Switch>\n        </Router>\n    </Provider>\n    \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}