{"version":3,"sources":["Helpers/history.js","Actions/types.js","Reducers/init.js","Reducers/alert.js","Reducers/index.js","Helpers/store.js","Utils/slugify.js","Components/Homepage.js","Components/Alert.js","Routing/DefaultLayout.js","Components/NotFound.js","Components/MessagePage.js","Actions/index.js","Actions/alertActions.js","Components/CreateApp.js","Routing/Routes.js","App.js","index.js"],"names":["history","createBrowserHistory","HELLO_MESSAGE_SUCCESS","HELLO_MESSAGE_FAIL","SET_ALERT","REMOVE_ALERT","initialState","message","errors","rootReducer","combineReducers","init","state","action","type","payload","alert","filter","id","middleware","thunk","store","createStore","compose","applyMiddleware","slugify","string","toLowerCase","replace","Homepage","props","useState","location","signUpForm","name","slug","email","password","setSignUpForm","onChangeSignUp","e","target","value","style","backgroundColor","overflowY","minHeight","className","paddingLeft","paddingRight","borderTopLeftRadius","borderBottomLeftRadius","Form","FormGroup","Label","for","fontSize","Input","placeholder","onChange","borderTopRightRadius","borderBottomRightRadius","required","Button","onClick","preventDefault","console","log","push","color","width","connect","alerts","length","map","UncontrolledAlert","alertType","msg","uuid","DefaultLayout","children","overflowX","DefaultLayoutRoute","Component","component","rest","render","matchProps","NotFound","aria-hidden","getMessage","dispatch","a","axios","get","response","data","useEffect","setAlert","timeout","uuidv4","setTimeout","CreateApp","schema","showDownloadLink","setShowDownloadLink","saveForm","form","model","isAuth","attributes","attribute","ref","post","window","scrollTo","updateModel","index","tempSchema","updateAttribute","modelIndex","attributeIndex","padding","Row","Col","disabled","marginTop","to","textDecoration","download","marginBottom","borderRadius","margin","md","splice","deleteModel","scroll","addAttribute","mod","ind","deleteAttribute","minWidth","Routes","exact","path","MessagePage","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aff73456.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const HELLO_MESSAGE_SUCCESS = 'HELLO_MESSAGE_SUCCESS';\r\nexport const HELLO_MESSAGE_FAIL = 'HELLO_MESSAGE_FAIL';\r\n\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","  \r\nimport {\r\n    HELLO_MESSAGE_SUCCESS,\r\n    HELLO_MESSAGE_FAIL \r\n} from '../Actions/types';\r\n\r\nconst initialState = {\r\n    message:'',\r\n    errors: null\r\n};\r\n\r\nexport default function reducerFunction(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case HELLO_MESSAGE_SUCCESS:\r\n      return {\r\n          ...state,\r\n          message: payload\r\n      };\r\n    case HELLO_MESSAGE_FAIL:\r\n      return {\r\n          ...state,\r\n          errors: payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","  \r\nimport { SET_ALERT, REMOVE_ALERT } from '../Actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function reducerFunction (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers} from 'redux';\r\n\r\n// Import all the reducers here\r\nimport init from './init';\r\nimport alert from './alert';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    init,\r\n    alert,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../Reducers';\r\n\r\nconst initalState = {};\r\n\r\nconst middleware =[thunk];\r\n\r\nconst store = createStore(rootReducer, initalState, compose(\r\n    applyMiddleware(...middleware)\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({trace: true})\r\n));\r\n\r\nexport default store;","\r\nconst slugify =  (string) => {\r\n\r\n    return string.toLowerCase().replace(/ /g,'-').replace(/[^\\w-]+/g,'');\r\n\r\n}\r\n\r\nexport default slugify","import React, { useState } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n// import { slugify } from \"../Utils/slugify\";\r\nimport slugify from \"../Utils/slugify\";\r\nimport {history} from '../Helpers';\r\n\r\nconst Homepage = (props) => {\r\n\r\n    const [signUpForm, setSignUpForm] = useState(\r\n        (props.location && props.location.state && props.location.state.signUpForm) ? props.location.state.signUpForm :\r\n        {\r\n            name: '',\r\n            slug: '',\r\n            email: '',\r\n            password: ''\r\n        })\r\n\r\n    const onChangeSignUp = (e) => {\r\n        setSignUpForm(\r\n            {\r\n                ...signUpForm,\r\n                [e.target.name]: e.target.name===\"slug\" ? slugify(e.target.value) : e.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    const onSubmitSignUp = (e) => {\r\n        e.preventDefault();\r\n        console.log(signUpForm)\r\n        history.push(`/continue-app`,{signUpForm:signUpForm})\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#B23CFD',overflowY:\"hidden\",minHeight:\"100vh\" }}>\r\n            <div className=\"display-2\">\r\n                <center>Hello, Welcome to Spawner</center>\r\n            </div>\r\n            <div className=\"container-fluid\" style={{ paddingLeft: '50px', paddingRight: \"50px\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\" style={{ backgroundColor: '#00B74A', minHeight: '80vh', borderTopLeftRadius: '20px', borderBottomLeftRadius: '20px'}}>\r\n                        <div className=\"display-4\">\r\n                            <center>Create a new app</center>\r\n                        </div>\r\n                        <div className=\"signup-form\">\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <Label for=\"name\" style={{fontSize:\"20px\"}}>App Name</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"name\" \r\n                                        placeholder=\"Please enter your app name\"\r\n                                        value={signUpForm.name}\r\n                                        onChange={onChangeSignUp}\r\n                                        style={{\r\n                                            fontSize:\"20px\",\r\n                                            borderTopRightRadius:\"20px\",\r\n                                            borderBottomRightRadius:\"20px\"\r\n                                        }}\r\n                                        required={true}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"slug\" style={{fontSize:\"20px\"}}>App Slug</Label>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        name=\"slug\" \r\n                                        placeholder=\"Enter your app slug (without spaces)\"\r\n                                        value={signUpForm.slug}\r\n                                        onChange={onChangeSignUp}\r\n                                        style={{\r\n                                            fontSize:\"20px\",\r\n                                            borderTopRightRadius:\"20px\",\r\n                                            borderBottomRightRadius:\"20px\"\r\n                                        }}                                        \r\n                                        required={true}\r\n                                    />\r\n                                    {\r\n                                        signUpForm.slug ?\r\n                                        <Label>Your slug is {slugify(signUpForm.slug)}</Label>\r\n                                        : null\r\n                                    }\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"email\" style={{fontSize:\"20px\"}}>Email</Label>\r\n                                    <Input \r\n                                        type=\"email\" \r\n                                        name=\"email\" \r\n                                        placeholder=\"Please enter your email\" \r\n                                        value={signUpForm.email}\r\n                                        onChange={onChangeSignUp}\r\n                                        style={{\r\n                                            fontSize:\"20px\",\r\n                                            borderTopRightRadius:\"20px\",\r\n                                            borderBottomRightRadius:\"20px\"\r\n                                        }}\r\n                                        required={true}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"password\" style={{fontSize:\"20px\"}}>Password</Label>\r\n                                    <Input \r\n                                        type=\"password\" \r\n                                        name=\"password\" \r\n                                        placeholder=\"Enter your admin password\" \r\n                                        value={signUpForm.password}\r\n                                        onChange={onChangeSignUp}    \r\n                                        style={{\r\n                                            fontSize:\"20px\",\r\n                                            borderTopRightRadius:\"20px\",\r\n                                            borderBottomRightRadius:\"20px\"\r\n                                        }}\r\n                                        required={true}\r\n                                    />\r\n                                </FormGroup>\r\n                                <span className=\"float float-right\">\r\n                                    <Button \r\n                                        onClick={onSubmitSignUp}\r\n                                        color=\"primary\" \r\n                                        style={{\r\n                                            fontSize:\"20px\",\r\n                                            width:\"400px\",\r\n                                            borderTopRightRadius:\"20px\",\r\n                                            borderBottomRightRadius:\"20px\"\r\n                                        }}\r\n                                    >\r\n                                            Next\r\n                                    </Button>\r\n                                </span>\r\n                            </Form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { UncontrolledAlert } from 'reactstrap';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map(alert => (\r\n    <UncontrolledAlert key={uuid()} color={alert.alertType}>\r\n        {alert.msg}\r\n    </UncontrolledAlert>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);","import React from 'react'\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Alert from '../Components/Alert';\r\n\r\n\r\nconst DefaultLayout = ({children}) => {\r\n    return (\r\n        <div id=\"wrapper\">\r\n            <div className=\"container-fluid p-0 min-vh-100\" style={{overflowX:'hidden'}}>\r\n                <div style={{backgroundColor: \"#B23CFD\"}} id=\"page-wrapper\">\r\n                    <Alert />\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst DefaultLayoutRoute = ({component: Component, ...rest}) => ( \r\n\r\n      <Route {...rest} render={matchProps => (  \r\n        <DefaultLayout>\r\n            <Component {...matchProps} />  \r\n        </DefaultLayout>\r\n      )} />  \r\n\r\n)\r\n\r\nDefaultLayout.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default DefaultLayoutRoute;\r\n\r\n","  \r\nimport React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1 className='x-large text-primary'>\r\n        <i className=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> Page Not Found\r\n      </h1>\r\n      <p className='large'>Sorry, this page does not exist</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport {getMessage} from '../Actions/index'\r\n\r\nconst MessagePage = ({getMessage,message}) => {\r\n\r\n    useEffect(()=>{\r\n\r\n        getMessage()\r\n    })\r\n    return(\r\n        <div>\r\n            <div className=\"display-4\">\r\n                <center>{message ? message : \"Not connected to backend apis yet\"}</center>\r\n                <center>This is the generic message</center>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMessagePage.propTypes = {\r\n    getMessage: PropTypes.func.isRequired,\r\n    message: PropTypes.string,\r\n    // errors:  PropTypes.object\r\n};\r\n  \r\nconst mapStateToProps = state => ({\r\n    // errors: state.auth.errors,\r\n    // user: state.auth.user\r\n    message: state.init.message\r\n});\r\n  \r\nexport default connect(mapStateToProps, { getMessage })(MessagePage);","// import api from '../Utils/api';\r\nimport axios from 'axios';\r\n// import { setAlert } from './alertActions';\r\n\r\nimport {\r\n    HELLO_MESSAGE_SUCCESS,\r\n    HELLO_MESSAGE_FAIL\r\n} from './types'\r\n\r\n// import { history } from '../Helpers';\r\n// import setAuthToken from \"../Utils/setAuthToken\";\r\n\r\nexport const getMessage = () => async dispatch => {\r\n    try{\r\n        const response = await axios.get('/hello');\r\n        dispatch({\r\n            type:HELLO_MESSAGE_SUCCESS,\r\n            payload: response.data.message\r\n        })\r\n    }catch(err){\r\n        if(err.response && err.response.data){\r\n            dispatch({\r\n                type:HELLO_MESSAGE_FAIL,\r\n                payload:err.response.data\r\n            })\r\n        }\r\n        console.log(err.response)\r\n        \r\n    }\r\n}","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { history } from \"../Helpers\";\r\nimport { setAlert } from '../Actions/alertActions'\r\nimport store from '../Helpers/store';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst CreateApp = (props) => {\r\n    if (!props.location.state || !props.location.state.signUpForm.email) {\r\n    history.push(\"/\");\r\n  }\r\n  const [signUpForm, setSignUpForm] = useState({\r\n    name: \"\",\r\n    slug: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    schema: [\r\n    ],\r\n  });\r\n  const [showDownloadLink,setShowDownloadLink] = useState(false)\r\n\r\n  // const tryRequire = (path) => {\r\n  //   try {\r\n  //   //  return require(`../../public/${path}`);\r\n  //    return true\r\n  //   } catch (err) {\r\n  //    return null;\r\n  //   }\r\n  // };\r\n  const saveForm = async () => {\r\n    let form = signUpForm\r\n\r\n    form.schema.map(model=>{\r\n      if(model.name){\r\n        if(!model.isAuth || model.isAuth==='isAuth'){\r\n          model.isAuth=false\r\n        }\r\n        model.attributes.map(attribute=>{\r\n\r\n          if(attribute.name){\r\n            if(!attribute.type || attribute.type===\"0\"){\r\n              attribute.type=\"String\"\r\n            }\r\n            if(!attribute.ref || attribute.ref===\"0\"){\r\n              attribute.ref=null\r\n            }\r\n            if(!attribute.required || attribute.required===\"0\"){\r\n              attribute.required=false\r\n            }\r\n            return attribute\r\n          }\r\n          return null\r\n        })\r\n        return model\r\n      }\r\n\r\n      return null\r\n    })\r\n    console.log(form)\r\n    setSignUpForm(form)\r\n    try{\r\n\r\n      const data = await axios.post('/app',form)\r\n\r\n      if(data.data){\r\n        // const showLinkCheck = () =>{\r\n          // if(tryRequire(`zips/${data.data.slug}.zip`)){\r\n            // clearInterval(checkInterval)\r\n            setShowDownloadLink(true)\r\n            window.scrollTo(0,0)\r\n            store.dispatch(setAlert(\"Your backend app has been created successfully. Click on the download button to get it now.\",\"success\"))\r\n          // }\r\n        // }\r\n        // const checkInterval = setInterval(showLinkCheck,2000)\r\n\r\n\r\n      }\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (props.location && props.location.state) {\r\n      if (!props.location.state || !props.location.state.signUpForm || props.location.state.signUpForm.name === \"\") {\r\n        history.push(\"/\");\r\n      }\r\n      setSignUpForm({\r\n        ...signUpForm,\r\n        name: props.location.state.signUpForm.name,\r\n        email: props.location.state.signUpForm.email,\r\n        slug: props.location.state.signUpForm.slug,\r\n        password: props.location.state.signUpForm.password,\r\n      });\r\n    }\r\n\r\n  }, [props.location, props.location.state]);\r\n\r\n  const addModel = (e) => {\r\n    e.preventDefault();\r\n    setSignUpForm({\r\n      ...signUpForm,\r\n      schema: [\r\n        ...signUpForm.schema,\r\n        {\r\n          isAuth: false,\r\n          name: \"\",\r\n          attributes: [],\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const updateModel = (e, index) => {\r\n    e.preventDefault();\r\n    const tempSchema = signUpForm.schema;\r\n    tempSchema[index][e.target.name] = e.target.value;\r\n    setSignUpForm({ ...signUpForm, schema: tempSchema });\r\n  };\r\n\r\n  const updateAttribute = (e, modelIndex,attributeIndex) => {\r\n    e.preventDefault();\r\n    const tempSchema = signUpForm.schema;\r\n    tempSchema[modelIndex].attributes[attributeIndex][e.target.name] = e.target.value\r\n    setSignUpForm({ ...signUpForm, schema: tempSchema });\r\n  };\r\n\r\n  const deleteModel = (modelIndex) => {\r\n    let tempSchema = signUpForm.schema;\r\n    tempSchema.splice(modelIndex,1)\r\n    setSignUpForm({ ...signUpForm, schema: tempSchema });\r\n  } \r\n  const deleteAttribute = (modelIndex,attributeIndex) => {\r\n    let tempSchema = signUpForm.schema;\r\n    tempSchema[modelIndex].attributes.splice(attributeIndex,1)\r\n    setSignUpForm({ ...signUpForm, schema: tempSchema });\r\n  }\r\n  const addAttribute = (e, modelIndex) => {\r\n    e.preventDefault();\r\n\r\n    const tempSchema = signUpForm.schema;\r\n    if(!tempSchema[modelIndex].name){\r\n      window.scroll(0,0)\r\n      store.dispatch(setAlert(\"Please enter model name first\",\"danger\",3000))\r\n    }else{\r\n      if(!tempSchema[modelIndex].attributes) {\r\n        tempSchema[modelIndex].attributes = []\r\n      }\r\n      tempSchema[modelIndex].attributes.push({\r\n        name: \"\",\r\n        type: \"\",\r\n        ref: \"\",\r\n        required: \"\"\r\n      })\r\n\r\n  \r\n      setSignUpForm({ ...signUpForm, schema: tempSchema });\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div\r\n      style={{ backgroundColor: \"#B23CFD\", padding: \"20px\", minHeight: \"100vh\" }}\r\n    >\r\n      <div className=\"display-2\">\r\n        <center>Continue creating your application...</center>\r\n      </div>\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-md-12\"\r\n            style={{\r\n              backgroundColor: \"#00B74A\",\r\n              borderTopLeftRadius: \"20px\",\r\n              borderBottomLeftRadius: \"20px\",\r\n              padding: \"20px\",\r\n            }}\r\n          >\r\n            <div className=\"display-4\">\r\n              <center>Create a new app</center>\r\n\r\n            </div>\r\n\r\n            <div className=\"signup-form\">\r\n              <Form>\r\n                <Row form>\r\n                  <Col >\r\n                    <FormGroup>\r\n                      <Label for=\"name\" style={{ fontSize: \"20px\" }}>\r\n                        App Name\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={signUpForm.name}\r\n                        style={{\r\n                          fontSize: \"20px\",\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col >\r\n                    <FormGroup>\r\n                      <Label for=\"slug\" style={{ fontSize: \"20px\" }}>\r\n                        App Slug\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"slug\"\r\n                        value={signUpForm.slug}\r\n                        style={{\r\n                          fontSize: \"20px\",\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col >\r\n                    <FormGroup>\r\n                      <Label for=\"email\" style={{ fontSize: \"20px\" }}>\r\n                        Email\r\n                      </Label>\r\n                      <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={signUpForm.email}\r\n                        style={{\r\n                          fontSize: \"20px\",\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  {\r\n                    showDownloadLink ?\r\n                    <Col>\r\n                      <Button\r\n                        color=\"info\"\r\n                        style={{\r\n                          fontSize: \"20px\",\r\n                          width: \"100%\",\r\n                          marginTop:\"38px\"\r\n                        }}\r\n                        >\r\n                          <Link to={`zips/${signUpForm.slug}.zip`} target=\"_blank\" style={{color:\"white\",textDecoration:\"none\"}} download>Download App</Link>\r\n                        </Button>\r\n                    </Col>\r\n                    :\r\n                    null\r\n                  }\r\n                </Row>\r\n\r\n                <center>\r\n                  <div style={{ marginBottom: \"20px\" }}>\r\n                    <Button\r\n                      color=\"info\"\r\n                      onClick={addModel}\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        // padding:\"10px\",\r\n                        width: \"400px\",\r\n                        borderRadius: \"20px\",\r\n                      }}\r\n                    >\r\n                      Add a new Model\r\n                    </Button>\r\n                  </div>\r\n                </center>\r\n                <div>\r\n                  {signUpForm.schema &&\r\n                    signUpForm.schema.map((model, modelIndex) => (\r\n                      <div \r\n                        key={modelIndex} \r\n                        style={{\r\n                          backgroundColor:\"seagreen\", \r\n                          padding:\"10px\",\r\n                          margin:\"10px\",\r\n                          borderRadius:\"10px\"\r\n                        }}\r\n                      >\r\n                        <Row form>\r\n                          <Col md={6}>\r\n                            <FormGroup>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"Model Name\"\r\n                                value={model.name}\r\n                                onChange={(e) => updateModel(e, modelIndex)}\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                }}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={2}>\r\n                            <FormGroup>\r\n                              <Input\r\n                                type=\"select\"\r\n                                name=\"isAuth\"\r\n                                id=\"isAuth\"\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                }}\r\n                                onChange={(e) => updateModel(e, modelIndex)}\r\n                              >\r\n                                <option value=\"isAuth\">Is Auth?</option>\r\n                                <option value={true}>True</option>\r\n                                <option value={false}>False</option>\r\n                              </Input>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={2}>\r\n                            <Button\r\n                              color=\"danger\"\r\n                              onClick={() => deleteModel(modelIndex)}\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                width: \"100%\",\r\n                              }}\r\n                            >\r\n                                Delete Model\r\n                            </Button>\r\n                          </Col>\r\n                          <Col md={2}>\r\n                            <Button\r\n                              color=\"warning\"\r\n                              onClick={(e) => addAttribute(e, modelIndex)}\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                width: \"100%\",\r\n                              }}\r\n                            >\r\n                              {model.attributes && model.attributes.length\r\n                                ? \"Add another attribute\"\r\n                                : \"Add an attribute\"}\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                        <div>\r\n                          {model.attributes && model.attributes.map((attribute, attributeIndex) => (\r\n                            <Row form key={attributeIndex}>\r\n                              <Col md={3}>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"name\"\r\n                                  value={attribute.name}\r\n                                  onChange = {(e) => updateAttribute(e, modelIndex,attributeIndex)}\r\n                                  placeholder=\"Attribute Name\"\r\n                                  style={{\r\n                                    fontSize: \"20px\",\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                              <Col md={3}>\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name=\"type\"\r\n                                    style={{ fontSize: \"20px\" }}\r\n                                    onChange = {(e) => updateAttribute(e, modelIndex,attributeIndex)}\r\n                                  >\r\n                                    <option value=\"0\">\r\n                                      Select Attribute Type\r\n                                    </option>\r\n                                    <option value=\"String\">String</option>\r\n                                    <option value=\"Number\">Number</option>\r\n                                    <option value=\"Date\">Date</option>\r\n                                    <option value=\"Buffer\">Buffer</option>\r\n                                    <option value=\"Boolean\">Boolean</option>\r\n                                    <option value=\"Mixed\">Mixed</option>\r\n                                    <option value=\"ObjectId\">ObjectId</option>\r\n                                    <option value=\"Array\">Array</option>\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={3}>\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name=\"ref\"\r\n                                    style={{ fontSize: \"20px\" }}\r\n                                    onChange = {(e) => updateAttribute(e, modelIndex,attributeIndex)}\r\n                                  >\r\n                                    <option value=\"0\">\r\n                                      Select Attribute Ref (if exists)\r\n                                    </option>\r\n                                    {\r\n                                      signUpForm.schema.map((mod,ind)=>\r\n                                      <option key={ind} value={mod.name}>{mod.name}</option>\r\n                                        )\r\n                                    }\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={2}>\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    name=\"required\"\r\n                                    style={{ fontSize: \"20px\" }}\r\n                                    onChange = {(e) => updateAttribute(e, modelIndex,attributeIndex)}\r\n                                  >\r\n                                    <option value=\"0\">\r\n                                      Attribute Required\r\n                                    </option>\r\n                                    <option value={true}>True</option>\r\n                                    <option value={false}>False</option>\r\n                                  </Input>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={1}>\r\n                                <Button\r\n                                  color=\"danger\"\r\n                                  onClick={()=>deleteAttribute(modelIndex,attributeIndex)}\r\n                                  style={{\r\n                                    fontSize: \"20px\"\r\n                                  }}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <span className=\"float float-Left\">\r\n                    <Button\r\n                      onClick={() =>\r\n                        history.push(\"/\", { signUpForm: signUpForm })\r\n                      }\r\n                      color=\"warning\"\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        padding: \"10px\",\r\n                        minWidth: \"200px\",\r\n                        borderTopLeftRadius: \"20px\",\r\n                        borderBottomLeftRadius: \"20px\",\r\n                      }}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  </span>\r\n                  <span className=\"float float-right\">\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      onClick={saveForm}\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        padding: \"10px\",\r\n                        minWidth: \"200px\",\r\n                        borderTopRightRadius: \"20px\",\r\n                        borderBottomRightRadius: \"20px\",\r\n                      }}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </span>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateApp;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n// import PrivateRoute from './PrivateRoute';\r\nimport DefaultLayoutRoute from './DefaultLayout';\r\nimport NotFound from '../Components/NotFound';\r\nimport MessagePage from '../Components/MessagePage';\r\nimport Homepage from '../Components/Homepage';\r\nimport CreateApp from '../Components/CreateApp';\r\n\r\n\r\nconst Routes =  ()  => {\r\n  return (\r\n      <Switch>\r\n        <DefaultLayoutRoute exact path=\"/\" component={Homepage} />\r\n        <DefaultLayoutRoute exact path=\"/hello\" component={MessagePage} />\r\n        <DefaultLayoutRoute path=\"/continue-app\" component={CreateApp} />\r\n        <DefaultLayoutRoute component={NotFound} />\r\n      </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n// const mapStateToProps = (state) => ({\r\n//   auth: state.auth,\r\n//   // isAuthenticated: state.auth.isAuthenticated,\r\n// });\r\n\r\n// export default connect(mapStateToProps)(Routes);\r\n","import React from 'react';\nimport { Router,Route, Switch } from 'react-router-dom';\nimport { history } from './Helpers';\n\nimport './App.css';\n\nimport { Provider } from 'react-redux';\nimport store from './Helpers/store';\nimport Homepage from './Components/Homepage';\nimport Routes from './Routing/Routes';\n\nimport DefaultLayoutRoute from './Routing/DefaultLayout';\n\nconst App = () => {\n  \n\n  return (\n    <Provider store={store}>\n        <Router history={history}>\n            <Switch>\n              <DefaultLayoutRoute exact path='/' component = {Homepage} />\n              <Route component = {Routes} />\n            </Switch>\n        </Router>\n    </Provider>\n    \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}